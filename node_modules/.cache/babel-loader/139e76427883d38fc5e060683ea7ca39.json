{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\josep\\\\Desktop\\\\GitHub\\\\guessWho\\\\Front-End-2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n    width: 7em;\\n    height: 2em;\\n    font-size: 1.1rem;\\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\\n    font-family: 'Patua One', cursive;\\n    margin-left: auto;\\n    margin-right: auto;\\n    border: 1px solid black;\\n    border-radius: .2em;\\n    background-color: #1DA1F2;\\n    color: white;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n    margin: 0;\\n    font-size: .85rem;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    margin: 0;\\n    font-size: 1.5rem;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    width: 300px;\\n    height: 150px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-around;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    width: 150px;\\n    height: 150px;\\n    border-radius: 50%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    width: 475px;\\n    height: 150px;\\n    border: 2px solid black;\\n    border-radius: 75px 5px 40px 75px;\\n    font-family: Arial, \\\"Helvetica Neue\\\", Helvetica, sans-serif;\\n    margin: 15px auto;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import axios from\"axios\";var CardDiv=styled.div(_templateObject());var Portrait=styled.img(_templateObject2());var Blurb=styled.div(_templateObject3());var CardName=styled.h2(_templateObject4());var CardText=styled.p(_templateObject5());var CardButton=styled.button(_templateObject6());var CandidateCard=function CandidateCard(props){function handleTurn(){if(props.currentPlayerID<props.playerList.length-1){props.setCurrentPlayerID(props.currentPlayerID+1);}else{props.setCurrentPlayerID(0);props.setTurns(props.turns-1);}}function sendPointsAndUpdateLevel(account){// Find account in playerlist by username\nvar playerListAccount=props.playerList.find(function(player){return player.name===account.username;});// update the point values of the account\naccount.points+=playerListAccount.points;// send points to server\naxios.put(\"https://bw-guess-who.herokuapp.com/api/users/\".concat(account.id),{points:account.points}).then(function(response){console.log(\"updated points for \".concat(account.username));}).catch(function(error){console.log(\"There was an error for \".concat(account.username),error);});// if the account has more than 10 points upgrade him to Intermediate\nif(account.points>=10&&account.level===\"Beginner\"){account.level=\"Intermediate\";axios.put(\"https://bw-guess-who.herokuapp.com/api/users/\".concat(account.id),{level:\"Intermediate\"}).then(function(response){console.log(\"updated level for \".concat(account.username));}).catch(function(error){console.log(\"There was an error for \".concat(account.username),error);});}// if the account has more than 30 points upgrade him to Advanced\nif(account.points>=30&&account.level===\"Intermediate\"){account.level=\"Advanced\";axios.put(\"https://bw-guess-who.herokuapp.com/api/users/\".concat(account.id),{level:\"Advanced\"}).then(function(response){console.log(\"updated level for \".concat(account.username));}).catch(function(error){console.log(\"There was an error for \".concat(account.username),error);});}}function tryGuess(){props.setGuess(props.name);if(props.name===props.mysteryCandidate.name&&props.turns>0){alert(\"Correct! Your guess was: \".concat(props.name,\".\"));props.setUpBoard();props.playerList[props.currentPlayerID].points+=1;handleTurn();}else if(props.turns>0){alert(\"Incorrect! Your guess was \".concat(props.name,\". The correct answer was \").concat(props.mysteryCandidate.name,\".\"));props.setUpBoard();handleTurn();}else{// the game is over\n// reset the candidate list and tweets\nprops.setRandomList([]);props.setTweet(\"\");// set the game to ended\nprops.setGameStarted(\"ended\");// update stats for the host\nsendPointsAndUpdateLevel(props.loggedInUser);// update stats for additional users\nprops.additionalUsers.forEach(function(user){sendPointsAndUpdateLevel(user);});}}return/*#__PURE__*/React.createElement(CardDiv,null,/*#__PURE__*/React.createElement(Portrait,{src:props.portrait}),/*#__PURE__*/React.createElement(Blurb,null,/*#__PURE__*/React.createElement(CardName,null,props.name),/*#__PURE__*/React.createElement(CardText,null,\"Party: \",props.party),/*#__PURE__*/React.createElement(CardText,null,props.description),/*#__PURE__*/React.createElement(CardButton,{onClick:tryGuess},\"Guess\")));};export default CandidateCard;","map":{"version":3,"sources":["C:/Users/josep/Desktop/GitHub/guessWho/Front-End-2/src/components/CandidateCard.js"],"names":["React","styled","axios","CardDiv","div","Portrait","img","Blurb","CardName","h2","CardText","p","CardButton","button","CandidateCard","props","handleTurn","currentPlayerID","playerList","length","setCurrentPlayerID","setTurns","turns","sendPointsAndUpdateLevel","account","playerListAccount","find","player","name","username","points","put","id","then","response","console","log","catch","error","level","tryGuess","setGuess","mysteryCandidate","alert","setUpBoard","setRandomList","setTweet","setGameStarted","loggedInUser","additionalUsers","forEach","user","portrait","party","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst CardDiv = styled.div`\r\n    display: flex;\r\n    width: 475px;\r\n    height: 150px;\r\n    border: 2px solid black;\r\n    border-radius: 75px 5px 40px 75px;\r\n    font-family: Arial, \"Helvetica Neue\", Helvetica, sans-serif;\r\n    margin: 15px auto;\r\n`;\r\n\r\nconst Portrait = styled.img`\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Blurb = styled.div`\r\n    width: 300px;\r\n    height: 150px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst CardName = styled.h2`\r\n    margin: 0;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nconst CardText = styled.p`\r\n    margin: 0;\r\n    font-size: .85rem;\r\n`;\r\n\r\nconst CardButton = styled.button`\r\n    width: 7em;\r\n    height: 2em;\r\n    font-size: 1.1rem;\r\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\r\n    font-family: 'Patua One', cursive;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border: 1px solid black;\r\n    border-radius: .2em;\r\n    background-color: #1DA1F2;\r\n    color: white;\r\n`;\r\n\r\n\r\nconst CandidateCard = props => {\r\n\r\n    function handleTurn() {\r\n        if (props.currentPlayerID < (props.playerList.length - 1)) {\r\n            props.setCurrentPlayerID(props.currentPlayerID + 1);\r\n        } else {\r\n            props.setCurrentPlayerID(0);\r\n            props.setTurns(props.turns - 1 );\r\n        }\r\n    }\r\n\r\n    function sendPointsAndUpdateLevel(account) {\r\n        // Find account in playerlist by username\r\n        var playerListAccount = props.playerList.find(function(player) {\r\n            return player.name === account.username;\r\n        });\r\n        \r\n        // update the point values of the account\r\n        account.points += playerListAccount.points;\r\n\r\n        // send points to server\r\n        axios\r\n        .put(`https://bw-guess-who.herokuapp.com/api/users/${account.id}`, { points: account.points })\r\n        .then(response => {\r\n            console.log(`updated points for ${account.username}`);\r\n        })\r\n        .catch(error => {\r\n            console.log(`There was an error for ${account.username}`, error);\r\n        })\r\n\r\n        // if the account has more than 10 points upgrade him to Intermediate\r\n        if (account.points >= 10 && account.level === \"Beginner\") {\r\n            account.level = \"Intermediate\";\r\n            axios\r\n            .put(`https://bw-guess-who.herokuapp.com/api/users/${account.id}`, { level: \"Intermediate\" })\r\n            .then(response => {\r\n                console.log(`updated level for ${account.username}`);\r\n            })\r\n            .catch(error => {\r\n                console.log(`There was an error for ${account.username}`, error);\r\n            })\r\n        }\r\n\r\n        // if the account has more than 30 points upgrade him to Advanced\r\n        if (account.points >= 30 && account.level === \"Intermediate\") {\r\n            account.level = \"Advanced\";\r\n            axios\r\n            .put(`https://bw-guess-who.herokuapp.com/api/users/${account.id}`, { level: \"Advanced\" })\r\n            .then(response => {\r\n                console.log(`updated level for ${account.username}`);\r\n            })\r\n            .catch(error => {\r\n                console.log(`There was an error for ${account.username}`, error);\r\n            })\r\n        }\r\n    }\r\n    \r\n    function tryGuess() {\r\n        props.setGuess(props.name);\r\n\r\n        if (props.name === props.mysteryCandidate.name && props.turns > 0) {\r\n            alert(`Correct! Your guess was: ${props.name}.`);\r\n            props.setUpBoard();\r\n            props.playerList[props.currentPlayerID].points += 1;\r\n            handleTurn()\r\n        } else if (props.turns > 0) {\r\n            alert(`Incorrect! Your guess was ${props.name}. The correct answer was ${props.mysteryCandidate.name}.`);\r\n            props.setUpBoard();\r\n            handleTurn()\r\n        } else {\r\n            // the game is over\r\n            // reset the candidate list and tweets\r\n            props.setRandomList([]);\r\n            props.setTweet(\"\");\r\n            // set the game to ended\r\n            props.setGameStarted(\"ended\");\r\n\r\n            // update stats for the host\r\n            sendPointsAndUpdateLevel(props.loggedInUser);\r\n\r\n            // update stats for additional users\r\n            props.additionalUsers.forEach(function(user) {\r\n                sendPointsAndUpdateLevel(user);\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CardDiv>\r\n            <Portrait src={props.portrait}></Portrait>\r\n            <Blurb>\r\n                <CardName>{props.name}</CardName>\r\n                <CardText>Party: {props.party}</CardText>\r\n                <CardText>{props.description}</CardText>\r\n                <CardButton onClick={tryGuess}>Guess</CardButton>\r\n            </Blurb>\r\n        </CardDiv>\r\n    )\r\n}\r\n\r\nexport default CandidateCard;"]},"metadata":{},"sourceType":"module"}