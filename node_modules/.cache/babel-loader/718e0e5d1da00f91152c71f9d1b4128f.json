{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Desktop\\\\GitHub\\\\guessWho\\\\Front-End-2\\\\src\\\\components\\\\CandidateList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CandidateCard from \"./CandidateCard\";\nimport CandidateData from \"./CandidateData\";\nimport styled from \"styled-components\";\n\nfunction CandidateList(props) {\n  const [candidates, setCandidates] = useState([]);\n  useEffect(() => {\n    setCandidates(props.data);\n  }, [props.data]);\n  return candidates.map(candidate => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CandidateCard, {\n      key: candidate.id,\n      name: candidate.name,\n      portrait: candidate.portrait,\n      party: candidate.party,\n      description: candidate.description,\n      guess: props.guess,\n      setGuess: props.setGuess,\n      playerList: props.playerList,\n      setPlayerList: props.setPlayerList,\n      gameStarted: props.gameStarted,\n      setGameStarted: props.setGameStarted,\n      turns: props.turns,\n      setTurns: props.setTurns,\n      currentPlayerID: props.currentPlayerID,\n      setCurrentPlayerID: props.setCurrentPlayerID,\n      mysteryCandidate: props.mysteryCandidate,\n      setMysteryCandidate: props.setMysteryCandidate,\n      setUpBoard: props.setUpBoard,\n      setTurns: props.setTurns,\n      randomList: props.data,\n      setRandomList: props.setRandomList,\n      setTweet: props.setTweet,\n      loggedInUser: props.loggedInUser,\n      setLoggedInUser: props.setLoggedInUser,\n      additionalUsers: props.additionalUsers,\n      setAdditionalUsers: props.setAdditionalUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }));\n  });\n}\n\nexport default CandidateList;","map":{"version":3,"sources":["C:/Users/josep/Desktop/GitHub/guessWho/Front-End-2/src/components/CandidateList.js"],"names":["React","useState","useEffect","CandidateCard","CandidateData","styled","CandidateList","props","candidates","setCandidates","data","map","candidate","id","name","portrait","party","description","guess","setGuess","playerList","setPlayerList","gameStarted","setGameStarted","turns","setTurns","currentPlayerID","setCurrentPlayerID","mysteryCandidate","setMysteryCandidate","setUpBoard","setRandomList","setTweet","loggedInUser","setLoggedInUser","additionalUsers","setAdditionalUsers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,aAAa,CAACF,KAAK,CAACG,IAAP,CAAb;AACH,GAFQ,EAEN,CAACH,KAAK,CAACG,IAAP,CAFM,CAAT;AAIA,SACIF,UAAU,CAACG,GAAX,CAAeC,SAAS,IAAI;AACxB,wBACI,uDACA,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,SAAS,CAACC,EAA9B;AAAkC,MAAA,IAAI,EAAED,SAAS,CAACE,IAAlD;AAAwD,MAAA,QAAQ,EAAEF,SAAS,CAACG,QAA5E;AAAsF,MAAA,KAAK,EAAEH,SAAS,CAACI,KAAvG;AACA,MAAA,WAAW,EAAEJ,SAAS,CAACK,WADvB;AACoC,MAAA,KAAK,EAAEV,KAAK,CAACW,KADjD;AACwD,MAAA,QAAQ,EAAEX,KAAK,CAACY,QADxE;AAEA,MAAA,UAAU,EAAEZ,KAAK,CAACa,UAFlB;AAE8B,MAAA,aAAa,EAAEb,KAAK,CAACc,aAFnD;AAGA,MAAA,WAAW,EAAEd,KAAK,CAACe,WAHnB;AAGgC,MAAA,cAAc,EAAEf,KAAK,CAACgB,cAHtD;AAIA,MAAA,KAAK,EAAEhB,KAAK,CAACiB,KAJb;AAIoB,MAAA,QAAQ,EAAEjB,KAAK,CAACkB,QAJpC;AAKA,MAAA,eAAe,EAAElB,KAAK,CAACmB,eALvB;AAKwC,MAAA,kBAAkB,EAAEnB,KAAK,CAACoB,kBALlE;AAMA,MAAA,gBAAgB,EAAEpB,KAAK,CAACqB,gBANxB;AAM0C,MAAA,mBAAmB,EAAErB,KAAK,CAACsB,mBANrE;AAOA,MAAA,UAAU,EAAEtB,KAAK,CAACuB,UAPlB;AAQA,MAAA,QAAQ,EAAEvB,KAAK,CAACkB,QARhB;AASA,MAAA,UAAU,EAAElB,KAAK,CAACG,IATlB;AASwB,MAAA,aAAa,EAAEH,KAAK,CAACwB,aAT7C;AAUA,MAAA,QAAQ,EAAExB,KAAK,CAACyB,QAVhB;AAWA,MAAA,YAAY,EAAEzB,KAAK,CAAC0B,YAXpB;AAWkC,MAAA,eAAe,EAAE1B,KAAK,CAAC2B,eAXzD;AAYA,MAAA,eAAe,EAAE3B,KAAK,CAAC4B,eAZvB;AAYwC,MAAA,kBAAkB,EAAE5B,KAAK,CAAC6B,kBAZlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAkBH,GAnBD,CADJ;AAsBH;;AAED,eAAe9B,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CandidateCard from \"./CandidateCard\";\r\nimport CandidateData from \"./CandidateData\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction CandidateList(props) {\r\n    const [candidates, setCandidates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setCandidates(props.data);\r\n    }, [props.data])\r\n\r\n    return(\r\n        candidates.map(candidate => {\r\n            return (\r\n                <>\r\n                <CandidateCard key={candidate.id} name={candidate.name} portrait={candidate.portrait} party={candidate.party} \r\n                description={candidate.description} guess={props.guess} setGuess={props.setGuess} \r\n                playerList={props.playerList} setPlayerList={props.setPlayerList}\r\n                gameStarted={props.gameStarted} setGameStarted={props.setGameStarted}\r\n                turns={props.turns} setTurns={props.setTurns}\r\n                currentPlayerID={props.currentPlayerID} setCurrentPlayerID={props.setCurrentPlayerID}\r\n                mysteryCandidate={props.mysteryCandidate} setMysteryCandidate={props.setMysteryCandidate}\r\n                setUpBoard={props.setUpBoard}\r\n                setTurns={props.setTurns}\r\n                randomList={props.data} setRandomList={props.setRandomList}\r\n                setTweet={props.setTweet}\r\n                loggedInUser={props.loggedInUser} setLoggedInUser={props.setLoggedInUser}\r\n                additionalUsers={props.additionalUsers} setAdditionalUsers={props.setAdditionalUsers}\r\n                />\r\n                </>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default CandidateList;"]},"metadata":{},"sourceType":"module"}