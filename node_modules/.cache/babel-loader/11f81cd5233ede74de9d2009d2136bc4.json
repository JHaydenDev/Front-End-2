{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Desktop\\\\GitHub\\\\guessWho\\\\Front-End-2\\\\src\\\\components\\\\TwitterGame.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { Motion, spring } from \"react-motion\";\nimport TwitterIcon from \"../images/TwitterIcon.png\";\nimport CandidateList from './CandidateList';\nimport CandidateData from './CandidateData';\nimport PlayerCard from './PlayerCard';\nimport NewPlayerForm from './NewPlayerForm';\nimport LoginPlayerForm from './LoginPlayerForm';\nimport DeletePlayerForm from './DeletePlayerForm';\nconst GameHeader = styled.div`\n    display: flex;\n    margin: auto;\n    margin-top: 1em;\n    width: 40em;\n    justify-content: space-around;\n`;\nconst GameTitle = styled.h2`\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\n    font-family: 'Patua One', cursive;\n    font-size: 4rem;\n    margin: 0px;\n`;\nconst GameImg = styled.img`\n    height: 5rem;\n    width: 5rem;\n`;\nconst GameSubTitle = styled.p`\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    margin-top: 0;\n    margin-bottom: 3em;\n`;\nconst GameSetup = styled.div`\n    \n`;\nconst StartButton = styled.button`\n    width: 10em;\n    height: 2em;\n    font-size: 1.1rem;\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\n    font-family: 'Patua One', cursive;\n    margin-left: auto;\n    margin-right: auto;\n    background-color: white;\n    border: 1px solid black;\n    border-radius: .2em;\n    background-color: #1DA1F2;\n    color: white;\n`;\nconst GameDiv = styled.div`\n    width: 1500px;\n    display: flex;\n    margin: auto;\n`;\nconst PlayDiv = styled.div`\n    width: 1100px;\n    display: flex;\n    flex-direction: column;\n`;\nconst StatusScreen = styled.div`\n    width: 1100px;\n    height: 200px;\n    font-size: 1.2rem;\n`;\nconst StatusText = styled.div`\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\n    font-family: 'Roboto', sans-serif;\n    font-size: 1.5rem;\n    margin: 1em 0;\n`;\nconst TweetText = styled.div`\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\n    font-family: 'Roboto', sans-serif;  \n    font-size: 1.2rem;\n    border: 1px solid black;\n    border-radius: 1em;\n    width: 600px\n    height: 100px;\n    margin: auto;\n    display: none;\n    justify-content: center;\n    align-items: center;\n    padding: .2em;\n`;\nconst CandidateScreen = styled.div`\n    width: 1100px;\n    display: flex;\n    flex-wrap: wrap;\n`;\nconst PlayerDiv = styled.div`\n    width: 400px;\n    font-size: 1.2rem;\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    top: 7em;\n    right: 1em;\n`;\nconst PlayersText = styled.p`\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\n    font-family: 'Patua One', cursive;\n    font-size: 2rem;\n`;\n\nfunction TwitterGame(props) {\n  const [randomList, setRandomList] = useState([]);\n  const [tweet, setTweet] = useState(\"\");\n  const [mysteryCandidate, setMysteryCandidate] = useState({});\n  const [guess, setGuess] = useState(\"\");\n  const [playerList, setPlayerList] = useState([{\n    id: 0,\n    name: `${props.loggedInUser.username}`,\n    points: 0\n  }]); //example list of players: { id: 0, name: \"Host\", points: 0}, { id: 1, name: \"Bob\", points: 0}, { id: 2, name: \"Steve\", points: 0}\n\n  const [gameStarted, setGameStarted] = useState(\"not started\");\n  const [turns, setTurns] = useState(5);\n  const [currentPlayerID, setCurrentPlayerID] = useState(0);\n  const [player, setPlayer] = useState({\n    id: 1,\n    name: \"\",\n    points: 0\n  });\n  const [additionalUsers, setAdditionalUsers] = useState([]);\n  const [difficulty, setDifficulty] = useState(19);\n  var x = 1;\n  useEffect(() => {\n    var axios_instance = axios.create({\n      withCredentials: false\n    });\n    axios_instance.get(`https://arcane-headland-50299.herokuapp.com/${mysteryCandidate.twitter}`).then(response => {\n      setTweet(response.data.statuses[0].text);\n    }).catch(error => {\n      console.log(\"There was an error:\", error);\n    });\n  }, [mysteryCandidate]);\n  useEffect(() => {\n    if (gameStarted === \"ended\") {\n      document.querySelector(StatusText).innerText = `Thanks for playing! Here are the winner(s): ${winnerCalc()} \\n Check your dashboard to see your overall score and level!`;\n      document.querySelector(StatusText).style.margin = \"4.5em auto\";\n      document.querySelector(TweetText).style.display = \"None\";\n    } else if (gameStarted === \"started\") {\n      // Update the top message\n      document.querySelector(StatusText).innerText = `It is ${playerList[currentPlayerID].name}'s turn! Please select which candidate you believe tweeted the below tweet:`;\n      document.querySelector(TweetText).style.display = \"flex\";\n      document.querySelector(GameSetup).style.display = \"None\";\n    }\n  });\n\n  function generateList() {\n    // Duplicate Candidate Data\n    var tempList = [...CandidateData]; // Shorten the list to 6\n\n    for (var i = 0; i < Number(difficulty); i++) {\n      tempList.splice(Math.floor(Math.random() * tempList.length), 1);\n    } // Shuffle the list\n\n\n    for (let i = tempList.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [tempList[i], tempList[j]] = [tempList[j], tempList[i]];\n    }\n\n    setMysteryCandidate(tempList[Math.floor(Math.random() * 4)]);\n    return tempList;\n  }\n\n  function setUpBoard() {\n    setGuess(\"\");\n    var mylist = generateList();\n    setRandomList(mylist);\n  }\n\n  const addPlayer = player => {\n    setPlayerList([...playerList, player]);\n  };\n\n  function startGame() {\n    if (playerList.length < 2) {\n      alert(\"Please add more players!\");\n    } else {\n      setGameStarted(\"started\");\n      setUpBoard();\n    }\n  }\n\n  ;\n\n  function winnerCalc() {\n    var funcList = [...playerList];\n    var score = 0;\n    var winnerString = \"\";\n\n    for (var i in funcList) {\n      if (funcList[i].points > score) {\n        winnerString = funcList[i].name;\n        score = funcList[i].points;\n      } else if (funcList[i].points === score) {\n        winnerString = winnerString + \" & \" + funcList[i].name;\n      }\n    }\n\n    return winnerString + ` with ${score} points!`;\n  }\n\n  const changeHandler = event => {\n    setDifficulty(event.target.value);\n  };\n\n  const difficultySelector = level => {\n    if (level === \"Beginner\") {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        id: \"difficulty-selector\",\n        onChange: changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"19\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, \"Beginner\"));\n    } else if (level === \"Intermediate\") {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        id: \"difficulty-selector\",\n        onChange: changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"19\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, \"Beginner\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }\n      }, \"Intermediate\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        id: \"difficulty-selector\",\n        onChange: changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"19\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }\n      }, \"Beginner\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, \"Intermediate\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }\n      }, \"Advanced\"));\n    }\n  };\n\n  if (props.loggedInUser.username === \"\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"welcome-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"welcome-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, \"Please log-in to start a game.\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Motion, {\n      defaultStyle: {\n        y: -200,\n        opacity: 0\n      },\n      style: {\n        y: spring(0),\n        opacity: spring(1)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, style => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        transform: `translateY(${style.y}px)`,\n        opacity: style.opacity\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GameTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, \"Guess the Tweeter\"), /*#__PURE__*/React.createElement(GameImg, {\n      src: TwitterIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(GameSubTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \"A fun Twitter matching game!\"))), /*#__PURE__*/React.createElement(GameSetup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LoginPlayerForm, {\n      addPlayer: addPlayer,\n      player: player,\n      setPlayer: setPlayer,\n      playerList: playerList,\n      additionalUsers: additionalUsers,\n      setAdditionalUsers: setAdditionalUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(NewPlayerForm, {\n      addPlayer: addPlayer,\n      player: player,\n      setPlayer: setPlayer,\n      playerList: playerList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }), difficultySelector(props.loggedInUser.level), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 67\n      }\n    }), /*#__PURE__*/React.createElement(StartButton, {\n      type: \"button\",\n      onClick: startGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, \"Start Game\")), /*#__PURE__*/React.createElement(GameDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PlayDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StatusScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(StatusText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TweetText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, tweet)), /*#__PURE__*/React.createElement(CandidateScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CandidateList, {\n      data: randomList,\n      setRandomList: setRandomList,\n      guess: guess,\n      setGuess: setGuess,\n      playerList: playerList,\n      setPlayerList: setPlayerList,\n      gameStarted: gameStarted,\n      setGameStarted: setGameStarted,\n      turns: turns,\n      setTurns: setTurns,\n      currentPlayerID: currentPlayerID,\n      setCurrentPlayerID: setCurrentPlayerID,\n      mysteryCandidate: mysteryCandidate,\n      setMysteryCandidate: setMysteryCandidate,\n      setUpBoard: setUpBoard,\n      setTurns: setTurns,\n      setTweet: setTweet,\n      loggedInUser: props.loggedInUser,\n      setLoggedInUser: props.setLoggedInUser,\n      additionalUsers: additionalUsers,\n      setAdditionalUsers: setAdditionalUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(PlayerDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PlayersText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }\n    }, \"Current Players:\"), playerList.map(player => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PlayerCard, {\n        name: player.name,\n        points: player.points,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 33\n        }\n      }));\n    }))));\n  }\n}\n\nexport default TwitterGame;","map":{"version":3,"sources":["C:/Users/josep/Desktop/GitHub/guessWho/Front-End-2/src/components/TwitterGame.js"],"names":["React","useState","useEffect","axios","styled","Motion","spring","TwitterIcon","CandidateList","CandidateData","PlayerCard","NewPlayerForm","LoginPlayerForm","DeletePlayerForm","GameHeader","div","GameTitle","h2","GameImg","img","GameSubTitle","p","GameSetup","StartButton","button","GameDiv","PlayDiv","StatusScreen","StatusText","TweetText","CandidateScreen","PlayerDiv","PlayersText","TwitterGame","props","randomList","setRandomList","tweet","setTweet","mysteryCandidate","setMysteryCandidate","guess","setGuess","playerList","setPlayerList","id","name","loggedInUser","username","points","gameStarted","setGameStarted","turns","setTurns","currentPlayerID","setCurrentPlayerID","player","setPlayer","additionalUsers","setAdditionalUsers","difficulty","setDifficulty","x","axios_instance","create","withCredentials","get","twitter","then","response","data","statuses","text","catch","error","console","log","document","querySelector","innerText","winnerCalc","style","margin","display","generateList","tempList","i","Number","splice","Math","floor","random","length","j","setUpBoard","mylist","addPlayer","startGame","alert","funcList","score","winnerString","changeHandler","event","target","value","difficultySelector","level","y","opacity","transform","setLoggedInUser","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport {Motion, spring} from \"react-motion\";\r\nimport TwitterIcon from \"../images/TwitterIcon.png\";\r\nimport CandidateList from './CandidateList';\r\nimport CandidateData from './CandidateData';\r\nimport PlayerCard from './PlayerCard';\r\nimport NewPlayerForm from './NewPlayerForm';\r\nimport LoginPlayerForm from './LoginPlayerForm';\r\nimport DeletePlayerForm from './DeletePlayerForm';\r\n\r\nconst GameHeader = styled.div`\r\n    display: flex;\r\n    margin: auto;\r\n    margin-top: 1em;\r\n    width: 40em;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst GameTitle = styled.h2`\r\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\r\n    font-family: 'Patua One', cursive;\r\n    font-size: 4rem;\r\n    margin: 0px;\r\n`;\r\n\r\nconst GameImg = styled.img`\r\n    height: 5rem;\r\n    width: 5rem;\r\n`;\r\n\r\nconst GameSubTitle = styled.p`\r\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 1rem;\r\n    margin-top: 0;\r\n    margin-bottom: 3em;\r\n`;\r\n\r\nconst GameSetup = styled.div`\r\n    \r\n`;\r\n\r\nconst StartButton = styled.button`\r\n    width: 10em;\r\n    height: 2em;\r\n    font-size: 1.1rem;\r\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\r\n    font-family: 'Patua One', cursive;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    background-color: white;\r\n    border: 1px solid black;\r\n    border-radius: .2em;\r\n    background-color: #1DA1F2;\r\n    color: white;\r\n`;\r\n\r\nconst GameDiv = styled.div`\r\n    width: 1500px;\r\n    display: flex;\r\n    margin: auto;\r\n`;\r\n\r\nconst PlayDiv = styled.div`\r\n    width: 1100px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst StatusScreen = styled.div`\r\n    width: 1100px;\r\n    height: 200px;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst StatusText = styled.div`\r\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 1.5rem;\r\n    margin: 1em 0;\r\n`;\r\n\r\nconst TweetText = styled.div`\r\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\r\n    font-family: 'Roboto', sans-serif;  \r\n    font-size: 1.2rem;\r\n    border: 1px solid black;\r\n    border-radius: 1em;\r\n    width: 600px\r\n    height: 100px;\r\n    margin: auto;\r\n    display: none;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: .2em;\r\n`;\r\n\r\nconst CandidateScreen = styled.div`\r\n    width: 1100px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst PlayerDiv = styled.div`\r\n    width: 400px;\r\n    font-size: 1.2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    top: 7em;\r\n    right: 1em;\r\n`;\r\n\r\nconst PlayersText = styled.p`\r\n    @import url('https://fonts.googleapis.com/css?family=Patua+One|Roboto&display=swap');\r\n    font-family: 'Patua One', cursive;\r\n    font-size: 2rem;\r\n`;\r\n\r\n\r\nfunction TwitterGame(props) {\r\n    const [randomList, setRandomList] = useState([]);\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [mysteryCandidate, setMysteryCandidate] = useState({});\r\n    const [guess, setGuess] = useState(\"\");\r\n    const [playerList, setPlayerList] = useState([{ id: 0, name: `${props.loggedInUser.username}`, points: 0}])\r\n    //example list of players: { id: 0, name: \"Host\", points: 0}, { id: 1, name: \"Bob\", points: 0}, { id: 2, name: \"Steve\", points: 0}\r\n    const [gameStarted, setGameStarted] = useState(\"not started\");\r\n    const [turns, setTurns] = useState(5);\r\n    const [currentPlayerID, setCurrentPlayerID] = useState(0);\r\n    const [player, setPlayer] = useState({\r\n        id: 1,\r\n        name: \"\",\r\n        points: 0\r\n    });\r\n    const [additionalUsers, setAdditionalUsers] = useState([]);\r\n    const [difficulty, setDifficulty] = useState(19);\r\n\r\n    var x = 1;\r\n\r\n    useEffect(() => {\r\n    var axios_instance = axios.create({\r\n        withCredentials: false\r\n        })\r\n    axios_instance.get(`https://arcane-headland-50299.herokuapp.com/${mysteryCandidate.twitter}`)\r\n    .then(response=>{\r\n        setTweet(response.data.statuses[0].text);\r\n    })\r\n    .catch(error => {\r\n        console.log(\"There was an error:\", error);\r\n    })\r\n        \r\n    }, [mysteryCandidate]);\r\n\r\n    useEffect(() => {\r\n        if (gameStarted === \"ended\") {\r\n            document.querySelector(StatusText).innerText = `Thanks for playing! Here are the winner(s): ${winnerCalc()} \\n Check your dashboard to see your overall score and level!`;\r\n            document.querySelector(StatusText).style.margin = \"4.5em auto\";\r\n            document.querySelector(TweetText).style.display = \"None\";\r\n        } else if (gameStarted === \"started\") {\r\n            // Update the top message\r\n            document.querySelector(StatusText).innerText = `It is ${playerList[currentPlayerID].name}'s turn! Please select which candidate you believe tweeted the below tweet:`;\r\n            document.querySelector(TweetText).style.display = \"flex\";\r\n            document.querySelector(GameSetup).style.display = \"None\";\r\n        }\r\n        \r\n    }, );\r\n\r\n    function generateList() {\r\n        // Duplicate Candidate Data\r\n        var tempList = [...CandidateData];\r\n\r\n        // Shorten the list to 6\r\n        for (var i = 0; i < Number(difficulty); i++) {\r\n            tempList.splice(Math.floor(Math.random()*tempList.length),1)\r\n        }\r\n\r\n        // Shuffle the list\r\n        for (let i = tempList.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [tempList[i], tempList[j]] = [tempList[j], tempList[i]];\r\n        }\r\n\r\n        setMysteryCandidate(tempList[Math.floor(Math.random() * 4)])\r\n\r\n        return tempList;\r\n    }\r\n\r\n    function setUpBoard(){\r\n        setGuess(\"\");\r\n        var mylist = generateList();\r\n        setRandomList(mylist);\r\n    }\r\n\r\n    const addPlayer = player => {\r\n        setPlayerList([...playerList, player]);\r\n    };\r\n\r\n    function startGame(){\r\n        if (playerList.length < 2) {\r\n            alert(\"Please add more players!\");\r\n        } else {\r\n            setGameStarted(\"started\");\r\n            setUpBoard();\r\n        }\r\n    };\r\n\r\n    function winnerCalc() {\r\n        var funcList = [...playerList];\r\n        var score = 0;\r\n        var winnerString = \"\";\r\n        for (var i in funcList) {\r\n            if (funcList[i].points > score) {\r\n                winnerString = funcList[i].name;\r\n                score = funcList[i].points;\r\n            } else if (funcList[i].points === score) {\r\n                winnerString = winnerString + \" & \" + funcList[i].name;\r\n            }\r\n        }\r\n        return(winnerString + ` with ${score} points!`)\r\n    }\r\n\r\n    const changeHandler = event => {\r\n        setDifficulty(event.target.value);\r\n    };\r\n\r\n    const difficultySelector = (level) => {\r\n        if (level === \"Beginner\") {\r\n            return (\r\n                <select id=\"difficulty-selector\" onChange={changeHandler}>\r\n                    <option value=\"19\">Beginner</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (level === \"Intermediate\") {\r\n            return (\r\n                <select id=\"difficulty-selector\" onChange={changeHandler}>\r\n                    <option value=\"19\">Beginner</option>\r\n                    <option value=\"17\">Intermediate</option>\r\n                </select>\r\n            )\r\n        } else {\r\n            return (\r\n                <select id=\"difficulty-selector\" onChange={changeHandler}>\r\n                    <option value=\"19\">Beginner</option>\r\n                    <option value=\"17\">Intermediate</option>\r\n                    <option value=\"15\">Advanced</option>\r\n                </select>\r\n            )\r\n        }\r\n    }\r\n\r\n    if (props.loggedInUser.username === \"\") {\r\n        return(\r\n        <div className=\"welcome-div\">\r\n            <p className=\"welcome-text\">Please log-in to start a game.</p>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"App\">\r\n                <Motion defaultStyle={{y: -200, opacity: 0}} style={{y: spring(0), opacity: spring(1)}}>\r\n                {(style) => (\r\n                <div style={{transform: `translateY(${style.y}px)`, opacity: style.opacity}}>\r\n                <GameHeader>\r\n                    <GameTitle>Guess the Tweeter</GameTitle>\r\n                    <GameImg src={TwitterIcon}/>\r\n                </GameHeader>\r\n                <GameSubTitle>A fun Twitter matching game!</GameSubTitle>\r\n                </div>\r\n                )}\r\n                </Motion>\r\n                <GameSetup>\r\n                    <LoginPlayerForm addPlayer={addPlayer} player={player} setPlayer={setPlayer} playerList={playerList} additionalUsers={additionalUsers} setAdditionalUsers={setAdditionalUsers}/>\r\n                    <NewPlayerForm addPlayer={addPlayer} player={player} setPlayer={setPlayer} playerList={playerList} />\r\n                    {difficultySelector(props.loggedInUser.level)}<br />\r\n                    <StartButton type=\"button\" onClick={startGame}>Start Game</StartButton>\r\n                </GameSetup>\r\n                <GameDiv>\r\n                    <PlayDiv>\r\n                        <StatusScreen>\r\n                            <StatusText></StatusText>\r\n                            <TweetText>{tweet}</TweetText>\r\n                        </StatusScreen>\r\n                        <CandidateScreen>\r\n                            <CandidateList data={randomList} setRandomList={setRandomList} guess={guess} setGuess={setGuess} \r\n                            playerList={playerList} setPlayerList={setPlayerList}\r\n                            gameStarted={gameStarted} setGameStarted={setGameStarted}\r\n                            turns={turns} setTurns={setTurns}\r\n                            currentPlayerID={currentPlayerID} setCurrentPlayerID={setCurrentPlayerID}\r\n                            mysteryCandidate={mysteryCandidate} setMysteryCandidate={setMysteryCandidate}\r\n                            setUpBoard={setUpBoard}\r\n                            setTurns={setTurns}\r\n                            setTweet={setTweet}\r\n                            loggedInUser={props.loggedInUser} setLoggedInUser={props.setLoggedInUser}\r\n                            additionalUsers={additionalUsers} setAdditionalUsers={setAdditionalUsers}\r\n                            />\r\n                        </CandidateScreen>\r\n                    </PlayDiv>\r\n                    <PlayerDiv>\r\n                        <PlayersText>Current Players:</PlayersText>\r\n                        {playerList.map(player => {\r\n                            return (\r\n                                <>\r\n                                <PlayerCard name={player.name} points={player.points}/>\r\n                                </>\r\n                            )})}\r\n                    </PlayerDiv>\r\n                </GameDiv>\r\n                \r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TwitterGame;"]},"metadata":{},"sourceType":"module"}